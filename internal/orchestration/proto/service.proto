// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the EARLY ACCESS SOFTWARE LICENSE AGREEMENT
// available at http://github.com/namespacelabs/foundation

syntax = "proto3";

package nsl.orchestration;

option go_package = "namespacelabs.dev/foundation/internal/orchestration/proto";

import "providers/aws/aws.proto";
import "internal/fnapi/userauth.proto";
import "schema/orchestration/event.proto";
import "schema/serialized.proto";
import "workspace/tasks/protolog/log.proto";

message DeployRequest {
    foundation.schema.DeployPlan  plan = 1;
    foundation.providers.aws.Conf aws  = 4;
    nsl.internal.fnapi.UserAuth   auth = 5;  // Time-limited Namespace session.

    reserved 2, 3;
}

message DeployResponse {
    string id = 1;  // Deployment to follow
}

message DeploymentStatusRequest {
    string id        = 1;  // Deployment to follow
    int32  log_level = 2;
}

message DeploymentStatusResponse {
    foundation.schema.orchestration.Event   event = 2;
    foundation.workspace.tasks.protolog.Log log   = 4;

    reserved 1, 3;
}

service OrchestrationService {
    rpc Deploy(DeployRequest) returns (DeployResponse);
    rpc DeploymentStatus(DeploymentStatusRequest) returns (stream DeploymentStatusResponse);
}