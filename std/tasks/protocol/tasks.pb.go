// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: std/tasks/protocol/tasks.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HumanReadableLabel string           `protobuf:"bytes,3,opt,name=human_readable_label,json=humanReadableLabel,proto3" json:"human_readable_label,omitempty"`
	CreatedTs          int64            `protobuf:"varint,4,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`         // Unix time.
	StartedTs          int64            `protobuf:"varint,13,opt,name=started_ts,json=startedTs,proto3" json:"started_ts,omitempty"`        // Unix time.
	CompletedTs        int64            `protobuf:"varint,5,opt,name=completed_ts,json=completedTs,proto3" json:"completed_ts,omitempty"`   // Unix time.
	ErrorMessage       string           `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // When completed_ts is set.
	Output             []*Task_Output   `protobuf:"bytes,7,rep,name=output,proto3" json:"output,omitempty"`
	Scope              []string         `protobuf:"bytes,11,rep,name=scope,proto3" json:"scope,omitempty"`
	EnvName            string           `protobuf:"bytes,12,opt,name=env_name,json=envName,proto3" json:"env_name,omitempty"`
	State              string           `protobuf:"bytes,14,opt,name=state,proto3" json:"state,omitempty"`
	Argument           []*Task_Argument `protobuf:"bytes,15,rep,name=argument,proto3" json:"argument,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_std_tasks_protocol_tasks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_std_tasks_protocol_tasks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_std_tasks_protocol_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetHumanReadableLabel() string {
	if x != nil {
		return x.HumanReadableLabel
	}
	return ""
}

func (x *Task) GetCreatedTs() int64 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

func (x *Task) GetStartedTs() int64 {
	if x != nil {
		return x.StartedTs
	}
	return 0
}

func (x *Task) GetCompletedTs() int64 {
	if x != nil {
		return x.CompletedTs
	}
	return 0
}

func (x *Task) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Task) GetOutput() []*Task_Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *Task) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Task) GetEnvName() string {
	if x != nil {
		return x.EnvName
	}
	return ""
}

func (x *Task) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Task) GetArgument() []*Task_Argument {
	if x != nil {
		return x.Argument
	}
	return nil
}

type Task_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *Task_Output) Reset() {
	*x = Task_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_std_tasks_protocol_tasks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Output) ProtoMessage() {}

func (x *Task_Output) ProtoReflect() protoreflect.Message {
	mi := &file_std_tasks_protocol_tasks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Output.ProtoReflect.Descriptor instead.
func (*Task_Output) Descriptor() ([]byte, []int) {
	return file_std_tasks_protocol_tasks_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Task_Output) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task_Output) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task_Output) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type Task_Argument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"` // The stored value is serialized in a best-effort way.
}

func (x *Task_Argument) Reset() {
	*x = Task_Argument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_std_tasks_protocol_tasks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Argument) ProtoMessage() {}

func (x *Task_Argument) ProtoReflect() protoreflect.Message {
	mi := &file_std_tasks_protocol_tasks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Argument.ProtoReflect.Descriptor instead.
func (*Task_Argument) Descriptor() ([]byte, []int) {
	return file_std_tasks_protocol_tasks_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Task_Argument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task_Argument) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_std_tasks_protocol_tasks_proto protoreflect.FileDescriptor

var file_std_tasks_protocol_tasks_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x23, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xd8, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x54, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x76, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x4f, 0x0a, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x30, 0x0a, 0x08,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x4a, 0x04,
	0x08, 0x08, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x09, 0x10, 0x0a, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b,
	0x42, 0x31, 0x5a, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62,
	0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_std_tasks_protocol_tasks_proto_rawDescOnce sync.Once
	file_std_tasks_protocol_tasks_proto_rawDescData = file_std_tasks_protocol_tasks_proto_rawDesc
)

func file_std_tasks_protocol_tasks_proto_rawDescGZIP() []byte {
	file_std_tasks_protocol_tasks_proto_rawDescOnce.Do(func() {
		file_std_tasks_protocol_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(file_std_tasks_protocol_tasks_proto_rawDescData)
	})
	return file_std_tasks_protocol_tasks_proto_rawDescData
}

var file_std_tasks_protocol_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_std_tasks_protocol_tasks_proto_goTypes = []interface{}{
	(*Task)(nil),          // 0: foundation.workspace.tasks.protocol.Task
	(*Task_Output)(nil),   // 1: foundation.workspace.tasks.protocol.Task.Output
	(*Task_Argument)(nil), // 2: foundation.workspace.tasks.protocol.Task.Argument
}
var file_std_tasks_protocol_tasks_proto_depIdxs = []int32{
	1, // 0: foundation.workspace.tasks.protocol.Task.output:type_name -> foundation.workspace.tasks.protocol.Task.Output
	2, // 1: foundation.workspace.tasks.protocol.Task.argument:type_name -> foundation.workspace.tasks.protocol.Task.Argument
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_std_tasks_protocol_tasks_proto_init() }
func file_std_tasks_protocol_tasks_proto_init() {
	if File_std_tasks_protocol_tasks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_std_tasks_protocol_tasks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_std_tasks_protocol_tasks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_std_tasks_protocol_tasks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Argument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_std_tasks_protocol_tasks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_std_tasks_protocol_tasks_proto_goTypes,
		DependencyIndexes: file_std_tasks_protocol_tasks_proto_depIdxs,
		MessageInfos:      file_std_tasks_protocol_tasks_proto_msgTypes,
	}.Build()
	File_std_tasks_protocol_tasks_proto = out.File
	file_std_tasks_protocol_tasks_proto_rawDesc = nil
	file_std_tasks_protocol_tasks_proto_goTypes = nil
	file_std_tasks_protocol_tasks_proto_depIdxs = nil
}
