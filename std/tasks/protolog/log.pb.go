// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: std/tasks/protolog/log.proto

package protolog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protocol "namespacelabs.dev/foundation/std/tasks/protocol"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Log_Purpose int32

const (
	Log_PURPOSE_UNKNOWN Log_Purpose = 0
	Log_PURPOSE_WAITING Log_Purpose = 1
	Log_PURPOSE_STARTED Log_Purpose = 2
	Log_PURPOSE_DONE    Log_Purpose = 3
	Log_PURPOSE_INSTANT Log_Purpose = 4
)

// Enum value maps for Log_Purpose.
var (
	Log_Purpose_name = map[int32]string{
		0: "PURPOSE_UNKNOWN",
		1: "PURPOSE_WAITING",
		2: "PURPOSE_STARTED",
		3: "PURPOSE_DONE",
		4: "PURPOSE_INSTANT",
	}
	Log_Purpose_value = map[string]int32{
		"PURPOSE_UNKNOWN": 0,
		"PURPOSE_WAITING": 1,
		"PURPOSE_STARTED": 2,
		"PURPOSE_DONE":    3,
		"PURPOSE_INSTANT": 4,
	}
)

func (x Log_Purpose) Enum() *Log_Purpose {
	p := new(Log_Purpose)
	*p = x
	return p
}

func (x Log_Purpose) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Log_Purpose) Descriptor() protoreflect.EnumDescriptor {
	return file_std_tasks_protolog_log_proto_enumTypes[0].Descriptor()
}

func (Log_Purpose) Type() protoreflect.EnumType {
	return &file_std_tasks_protolog_log_proto_enumTypes[0]
}

func (x Log_Purpose) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Log_Purpose.Descriptor instead.
func (Log_Purpose) EnumDescriptor() ([]byte, []int) {
	return file_std_tasks_protolog_log_proto_rawDescGZIP(), []int{0, 0}
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel int32          `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	Task     *protocol.Task `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Purpose  Log_Purpose    `protobuf:"varint,3,opt,name=purpose,proto3,enum=foundation.workspace.tasks.protolog.Log_Purpose" json:"purpose,omitempty"`
	Lines    *Log_Lines     `protobuf:"bytes,4,opt,name=lines,proto3" json:"lines,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_std_tasks_protolog_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_std_tasks_protolog_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_std_tasks_protolog_log_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetLogLevel() int32 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *Log) GetTask() *protocol.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Log) GetPurpose() Log_Purpose {
	if x != nil {
		return x.Purpose
	}
	return Log_PURPOSE_UNKNOWN
}

func (x *Log) GetLines() *Log_Lines {
	if x != nil {
		return x.Lines
	}
	return nil
}

type Log_Lines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cat   string   `protobuf:"bytes,4,opt,name=cat,proto3" json:"cat,omitempty"`
	Lines [][]byte `protobuf:"bytes,7,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *Log_Lines) Reset() {
	*x = Log_Lines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_std_tasks_protolog_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log_Lines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log_Lines) ProtoMessage() {}

func (x *Log_Lines) ProtoReflect() protoreflect.Message {
	mi := &file_std_tasks_protolog_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log_Lines.ProtoReflect.Descriptor instead.
func (*Log_Lines) Descriptor() ([]byte, []int) {
	return file_std_tasks_protolog_log_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Log_Lines) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Log_Lines) GetCat() string {
	if x != nil {
		return x.Cat
	}
	return ""
}

func (x *Log_Lines) GetLines() [][]byte {
	if x != nil {
		return x.Lines
	}
	return nil
}

var File_std_tasks_protolog_log_proto protoreflect.FileDescriptor

var file_std_tasks_protolog_log_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6c, 0x6f, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6c, 0x6f, 0x67, 0x1a, 0x1e, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x03, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x2e, 0x4c,
	0x6f, 0x67, 0x2e, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x1a, 0x43, 0x0a, 0x05, 0x4c, 0x69, 0x6e,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x6f,
	0x0a, 0x07, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x55, 0x52,
	0x50, 0x4f, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55, 0x52, 0x50,
	0x4f, 0x53, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x55,
	0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x04, 0x4a,
	0x04, 0x08, 0x05, 0x10, 0x06, 0x42, 0x31, 0x5a, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x64, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_std_tasks_protolog_log_proto_rawDescOnce sync.Once
	file_std_tasks_protolog_log_proto_rawDescData = file_std_tasks_protolog_log_proto_rawDesc
)

func file_std_tasks_protolog_log_proto_rawDescGZIP() []byte {
	file_std_tasks_protolog_log_proto_rawDescOnce.Do(func() {
		file_std_tasks_protolog_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_std_tasks_protolog_log_proto_rawDescData)
	})
	return file_std_tasks_protolog_log_proto_rawDescData
}

var file_std_tasks_protolog_log_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_std_tasks_protolog_log_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_std_tasks_protolog_log_proto_goTypes = []interface{}{
	(Log_Purpose)(0),      // 0: foundation.workspace.tasks.protolog.Log.Purpose
	(*Log)(nil),           // 1: foundation.workspace.tasks.protolog.Log
	(*Log_Lines)(nil),     // 2: foundation.workspace.tasks.protolog.Log.Lines
	(*protocol.Task)(nil), // 3: foundation.workspace.tasks.protocol.Task
}
var file_std_tasks_protolog_log_proto_depIdxs = []int32{
	3, // 0: foundation.workspace.tasks.protolog.Log.task:type_name -> foundation.workspace.tasks.protocol.Task
	0, // 1: foundation.workspace.tasks.protolog.Log.purpose:type_name -> foundation.workspace.tasks.protolog.Log.Purpose
	2, // 2: foundation.workspace.tasks.protolog.Log.lines:type_name -> foundation.workspace.tasks.protolog.Log.Lines
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_std_tasks_protolog_log_proto_init() }
func file_std_tasks_protolog_log_proto_init() {
	if File_std_tasks_protolog_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_std_tasks_protolog_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_std_tasks_protolog_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log_Lines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_std_tasks_protolog_log_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_std_tasks_protolog_log_proto_goTypes,
		DependencyIndexes: file_std_tasks_protolog_log_proto_depIdxs,
		EnumInfos:         file_std_tasks_protolog_log_proto_enumTypes,
		MessageInfos:      file_std_tasks_protolog_log_proto_msgTypes,
	}.Build()
	File_std_tasks_protolog_log_proto = out.File
	file_std_tasks_protolog_log_proto_rawDesc = nil
	file_std_tasks_protolog_log_proto_goTypes = nil
	file_std_tasks_protolog_log_proto_depIdxs = nil
}
