// This file was automatically generated by Namespace.
// DO NOT EDIT. To update, re-run `ns generate`.

package grpc

import (
	"context"
	"namespacelabs.dev/foundation/std/go/core"
	"namespacelabs.dev/foundation/std/secrets"
)

// Dependencies that are instantiated once for the lifetime of the extension.
type ExtensionDeps struct {
	TlsCert *secrets.Value
}

var (
	Package__9aqa7n = &core.Package{
		PackageName: "namespacelabs.dev/foundation/std/go/grpc",
	}

	Provider__9aqa7n = core.Provider{
		Package:     Package__9aqa7n,
		Instantiate: makeDeps__9aqa7n,
	}

	Initializers__9aqa7n = []*core.Initializer{
		{
			Package: Package__9aqa7n,
			Do: func(ctx context.Context, di core.Dependencies) error {
				return di.Instantiate(ctx, Provider__9aqa7n, func(ctx context.Context, v interface{}) error {
					return Prepare(ctx, v.(ExtensionDeps))
				})
			},
		},
	}
)

func makeDeps__9aqa7n(ctx context.Context, di core.Dependencies) (_ interface{}, err error) {
	var deps ExtensionDeps

	// name: "grpc-tls-cert"
	// self_signed_tls_certificate: {
	//   organization: "Namespace Labs, Inc"
	//   common_name_prefix: "Namespace"
	// }
	if deps.TlsCert, err = secrets.ProvideSecret(ctx, core.MustUnwrapProto("Cg1ncnBjLXRscy1jZXJ0OiAKE05hbWVzcGFjZSBMYWJzLCBJbmMSCU5hbWVzcGFjZQ==", &secrets.Secret{}).(*secrets.Secret)); err != nil {
		return nil, err
	}

	return deps, nil
}
