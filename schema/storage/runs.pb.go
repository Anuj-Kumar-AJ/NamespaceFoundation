// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the EARLY ACCESS SOFTWARE LICENSE AGREEMENT
// available at http://github.com/namespacelabs/foundation

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: schema/storage/runs.proto

package storage

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SectionRun_Kind int32

const (
	SectionRun_KIND_UNKNOWN SectionRun_Kind = 0
	SectionRun_BUILD        SectionRun_Kind = 1
	SectionRun_TEST         SectionRun_Kind = 2
	SectionRun_DEPLOY       SectionRun_Kind = 3
)

// Enum value maps for SectionRun_Kind.
var (
	SectionRun_Kind_name = map[int32]string{
		0: "KIND_UNKNOWN",
		1: "BUILD",
		2: "TEST",
		3: "DEPLOY",
	}
	SectionRun_Kind_value = map[string]int32{
		"KIND_UNKNOWN": 0,
		"BUILD":        1,
		"TEST":         2,
		"DEPLOY":       3,
	}
)

func (x SectionRun_Kind) Enum() *SectionRun_Kind {
	p := new(SectionRun_Kind)
	*p = x
	return p
}

func (x SectionRun_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SectionRun_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_storage_runs_proto_enumTypes[0].Descriptor()
}

func (SectionRun_Kind) Type() protoreflect.EnumType {
	return &file_schema_storage_runs_proto_enumTypes[0]
}

func (x SectionRun_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SectionRun_Kind.Descriptor instead.
func (SectionRun_Kind) EnumDescriptor() ([]byte, []int) {
	return file_schema_storage_runs_proto_rawDescGZIP(), []int{1, 0}
}

// Emitted by each individual run, regardless of kind and storage type.
type UndifferentiatedRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentRunId string                 `protobuf:"bytes,1,opt,name=parent_run_id,json=parentRunId,proto3" json:"parent_run_id,omitempty"`
	Status      *status.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Completed   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed,proto3" json:"completed,omitempty"` // Regardless of success or failure.
	Attachment  []*anypb.Any           `protobuf:"bytes,5,rep,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *UndifferentiatedRun) Reset() {
	*x = UndifferentiatedRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_storage_runs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndifferentiatedRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndifferentiatedRun) ProtoMessage() {}

func (x *UndifferentiatedRun) ProtoReflect() protoreflect.Message {
	mi := &file_schema_storage_runs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndifferentiatedRun.ProtoReflect.Descriptor instead.
func (*UndifferentiatedRun) Descriptor() ([]byte, []int) {
	return file_schema_storage_runs_proto_rawDescGZIP(), []int{0}
}

func (x *UndifferentiatedRun) GetParentRunId() string {
	if x != nil {
		return x.ParentRunId
	}
	return ""
}

func (x *UndifferentiatedRun) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UndifferentiatedRun) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *UndifferentiatedRun) GetCompleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Completed
	}
	return nil
}

func (x *UndifferentiatedRun) GetAttachment() []*anypb.Any {
	if x != nil {
		return x.Attachment
	}
	return nil
}

// Used for permanent storage.
type SectionRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind             SectionRun_Kind                `protobuf:"varint,1,opt,name=kind,proto3,enum=foundation.schema.storage.SectionRun_Kind" json:"kind,omitempty"`
	Label            string                         `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"` // For human consumption.
	ParentRunId      string                         `protobuf:"bytes,3,opt,name=parent_run_id,json=parentRunId,proto3" json:"parent_run_id,omitempty"`
	Status           *status.Status                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Created          *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Completed        *timestamppb.Timestamp         `protobuf:"bytes,6,opt,name=completed,proto3" json:"completed,omitempty"`   // Regardless of success or failure.
	Attachment       []*anypb.Any                   `protobuf:"bytes,7,rep,name=attachment,proto3" json:"attachment,omitempty"` // Inline attachments.
	StoredAttachment []*SectionRun_StoredAttachment `protobuf:"bytes,8,rep,name=stored_attachment,json=storedAttachment,proto3" json:"stored_attachment,omitempty"`
}

func (x *SectionRun) Reset() {
	*x = SectionRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_storage_runs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionRun) ProtoMessage() {}

func (x *SectionRun) ProtoReflect() protoreflect.Message {
	mi := &file_schema_storage_runs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionRun.ProtoReflect.Descriptor instead.
func (*SectionRun) Descriptor() ([]byte, []int) {
	return file_schema_storage_runs_proto_rawDescGZIP(), []int{1}
}

func (x *SectionRun) GetKind() SectionRun_Kind {
	if x != nil {
		return x.Kind
	}
	return SectionRun_KIND_UNKNOWN
}

func (x *SectionRun) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SectionRun) GetParentRunId() string {
	if x != nil {
		return x.ParentRunId
	}
	return ""
}

func (x *SectionRun) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SectionRun) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *SectionRun) GetCompleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Completed
	}
	return nil
}

func (x *SectionRun) GetAttachment() []*anypb.Any {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *SectionRun) GetStoredAttachment() []*SectionRun_StoredAttachment {
	if x != nil {
		return x.StoredAttachment
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionRun []*SectionRun `protobuf:"bytes,1,rep,name=section_run,json=sectionRun,proto3" json:"section_run,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_storage_runs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_schema_storage_runs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_schema_storage_runs_proto_rawDescGZIP(), []int{2}
}

func (x *Run) GetSectionRun() []*SectionRun {
	if x != nil {
		return x.SectionRun
	}
	return nil
}

// Attachments that are too large, may end being stored individually.
type SectionRun_StoredAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeUrl        string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	ImageReference string `protobuf:"bytes,2,opt,name=image_reference,json=imageReference,proto3" json:"image_reference,omitempty"` // Stored in the specified image. If unset, the same image where Run is stored.
	ImagePath      string `protobuf:"bytes,3,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`                // The file path within the image that holds the contents.
}

func (x *SectionRun_StoredAttachment) Reset() {
	*x = SectionRun_StoredAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_storage_runs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionRun_StoredAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionRun_StoredAttachment) ProtoMessage() {}

func (x *SectionRun_StoredAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_schema_storage_runs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionRun_StoredAttachment.ProtoReflect.Descriptor instead.
func (*SectionRun_StoredAttachment) Descriptor() ([]byte, []int) {
	return file_schema_storage_runs_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SectionRun_StoredAttachment) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *SectionRun_StoredAttachment) GetImageReference() string {
	if x != nil {
		return x.ImageReference
	}
	return ""
}

func (x *SectionRun_StoredAttachment) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

var File_schema_storage_runs_proto protoreflect.FileDescriptor

var file_schema_storage_runs_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x72, 0x75, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x02, 0x0a, 0x13,
	0x55, 0x6e, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x75, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xef, 0x04, 0x0a, 0x0a, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x12, 0x3e, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x2e, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x75, 0x0a, 0x10, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x39, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55,
	0x49, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x03, 0x22, 0x4d, 0x0a, 0x03, 0x52,
	0x75, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x42, 0x2d, 0x5a, 0x2b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_schema_storage_runs_proto_rawDescOnce sync.Once
	file_schema_storage_runs_proto_rawDescData = file_schema_storage_runs_proto_rawDesc
)

func file_schema_storage_runs_proto_rawDescGZIP() []byte {
	file_schema_storage_runs_proto_rawDescOnce.Do(func() {
		file_schema_storage_runs_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_storage_runs_proto_rawDescData)
	})
	return file_schema_storage_runs_proto_rawDescData
}

var file_schema_storage_runs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_schema_storage_runs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_schema_storage_runs_proto_goTypes = []interface{}{
	(SectionRun_Kind)(0),                // 0: foundation.schema.storage.SectionRun.Kind
	(*UndifferentiatedRun)(nil),         // 1: foundation.schema.storage.UndifferentiatedRun
	(*SectionRun)(nil),                  // 2: foundation.schema.storage.SectionRun
	(*Run)(nil),                         // 3: foundation.schema.storage.Run
	(*SectionRun_StoredAttachment)(nil), // 4: foundation.schema.storage.SectionRun.StoredAttachment
	(*status.Status)(nil),               // 5: google.rpc.Status
	(*timestamppb.Timestamp)(nil),       // 6: google.protobuf.Timestamp
	(*anypb.Any)(nil),                   // 7: google.protobuf.Any
}
var file_schema_storage_runs_proto_depIdxs = []int32{
	5,  // 0: foundation.schema.storage.UndifferentiatedRun.status:type_name -> google.rpc.Status
	6,  // 1: foundation.schema.storage.UndifferentiatedRun.created:type_name -> google.protobuf.Timestamp
	6,  // 2: foundation.schema.storage.UndifferentiatedRun.completed:type_name -> google.protobuf.Timestamp
	7,  // 3: foundation.schema.storage.UndifferentiatedRun.attachment:type_name -> google.protobuf.Any
	0,  // 4: foundation.schema.storage.SectionRun.kind:type_name -> foundation.schema.storage.SectionRun.Kind
	5,  // 5: foundation.schema.storage.SectionRun.status:type_name -> google.rpc.Status
	6,  // 6: foundation.schema.storage.SectionRun.created:type_name -> google.protobuf.Timestamp
	6,  // 7: foundation.schema.storage.SectionRun.completed:type_name -> google.protobuf.Timestamp
	7,  // 8: foundation.schema.storage.SectionRun.attachment:type_name -> google.protobuf.Any
	4,  // 9: foundation.schema.storage.SectionRun.stored_attachment:type_name -> foundation.schema.storage.SectionRun.StoredAttachment
	2,  // 10: foundation.schema.storage.Run.section_run:type_name -> foundation.schema.storage.SectionRun
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_schema_storage_runs_proto_init() }
func file_schema_storage_runs_proto_init() {
	if File_schema_storage_runs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_storage_runs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndifferentiatedRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_storage_runs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_storage_runs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_storage_runs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionRun_StoredAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_storage_runs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_storage_runs_proto_goTypes,
		DependencyIndexes: file_schema_storage_runs_proto_depIdxs,
		EnumInfos:         file_schema_storage_runs_proto_enumTypes,
		MessageInfos:      file_schema_storage_runs_proto_msgTypes,
	}.Build()
	File_schema_storage_runs_proto = out.File
	file_schema_storage_runs_proto_rawDesc = nil
	file_schema_storage_runs_proto_goTypes = nil
	file_schema_storage_runs_proto_depIdxs = nil
}
