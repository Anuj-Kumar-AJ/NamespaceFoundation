// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the EARLY ACCESS SOFTWARE LICENSE AGREEMENT
// available at http://github.com/namespacelabs/foundation

syntax = "proto3";

package foundation.schema.storage;

option go_package = "namespacelabs.dev/foundation/schema/storage";

import "schema/runtime.proto";
import "schema/definition.proto";
import "schema/serialized.proto";
import "google/protobuf/timestamp.proto";
import "schema/storage/logs.proto";
import "schema/storage/diagnostics.proto";

// Next ID: 11
message TestBundle {
    string          parent_run_id      = 9;
    string          test_package       = 6;
    string          test_name          = 7;
    TestResult      result             = 1;
    repeated string servers_under_test = 8;

    google.protobuf.Timestamp created   = 4;
    google.protobuf.Timestamp completed = 5;  // Regardless of success or failure.

    LogRef          test_log   = 2;
    repeated LogRef server_log = 3;

    EnvironmentDiagnostics env_diagnostics = 10;
}

message TestRuns {
    repeated Run run = 1;

    message Run {
        string           test_bundle_id = 1;
        TestBundle       test_summary   = 2;  // XXX replace with test_results.
        TestResultBundle test_results   = 3;
    }
}

message TestResult {
    bool   success       = 1;
    int32  error_code    = 2;
    string error_message = 3;
}

// Next ID: 7
message TestResultBundle {
    TestResult                               result                  = 1;
    foundation.schema.DeployPlan             deploy_plan             = 4;
    foundation.schema.ComputedConfigurations computed_configurations = 5;
    InlineLog                                test_log                = 2;
    repeated InlineLog                       server_log              = 3;
    EnvironmentDiagnostics                   env_diagnostics         = 6;

    message InlineLog {
        string                          package_name   = 1;
        string                          container_name = 3;
        foundation.schema.ContainerKind container_kind = 4;
        bytes                           output         = 2;
    }
}
